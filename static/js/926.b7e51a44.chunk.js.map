{"version":3,"file":"static/js/926.b7e51a44.chunk.js","mappings":"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","sources":["components/Filter/Filter.styled.jsx","redux/filter/selectors.js","components/Filter/Filter.jsx","redux/tours/selectors.js","components/ToursList/ToursItem/ToursItem.styled.jsx","components/ToursList/ToursItem/ToursItem.jsx","components/ToursList/ToursList.styled.jsx","components/ToursList/ToursList.jsx","pages/ToursPage/ToursPage.styled.jsx","pages/ToursPage/ToursPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const FilterForm = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 10px;\n    margin-bottom: 30px;\n`","export const selectFilterLoading = state => state.filter.isLoading;\nexport const selectFilteredTours = state => state.filter.filteredTours\nexport const selectFilters = state => state.filter.filters\nexport const selectisFiltered = state => state.filter.isFiltered\nexport const selectCountries = state => state.filter.countries\nexport const selectCountryLoading = state => state.filter.countryLoading\n","import { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\nimport React, { useState } from 'react';\nimport { FilterForm } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectCountries } from 'redux/filter/selectors';\nimport { setFilters } from 'redux/filter/filterSlice';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const countries = useSelector(selectCountries);\n  function handleChange(e) {\n    setSelectedCountry(e.target.value);\n      dispatch(\n        setFilters({\n          country: e.target.value,\n        })\n      );\n  }\n  return (\n    <FilterForm>\n      <FormControl sx={{ minWidth: '150px' }}>\n        <InputLabel id=\"country-select\">Country</InputLabel>\n        <Select\n          labelId=\"country-select\"\n          sx={{ minWidth: '150px' }}\n          value={selectedCountry}\n          label=\"Country\"\n          onChange={handleChange}\n        >\n          {countries?.map(country => (\n            <MenuItem key={country._id} value={country.country}>\n              {country.country}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </FilterForm>\n  );\n}\n\nexport default Filter;\n","export const selectLoading = state => state.tours.isLoading;\nexport const selectTours = state => state.tours.tours\n","import styled from 'styled-components';\n\nexport const TourCardContainer = styled.div`\n  width: 30%; \n  padding: 20px;\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  transition: box-shadow 0.3s ease-in-out;\n\n  &:hover {\n    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\n  }\n`;\n\nexport const TourTitle = styled.h3`\n  margin-bottom: 20px;\n`;\n\nexport const TourDescription = styled.p`\n  color: #555;\n  margin-bottom: 20px;\n`;\nexport const InfoLabel = styled.span`\n  font-weight: bold;\n  color: #555;\n`;\nexport const TourInfo = styled.div`\n  margin-bottom: 15px;\n`;\n\nexport const InfoValue = styled.span`\n  margin-left: 5px;\n  color: #333;\n`;\nexport const ViewDetailsButton = styled.button`\n  background-color: #4caf50;\n  color: #fff;\n  padding: 8px 12px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.3s ease-in-out;\n\n  &:hover {\n    background-color: #45a049;\n  }\n`;\n\n","import { InfoLabel, InfoValue, TourCardContainer, TourDescription, TourInfo, TourTitle, ViewDetailsButton } from \"./ToursItem.styled\";\n\nfunction ToursItem({tour}) {\n  return (\n    <TourCardContainer>\n      <TourTitle>{tour.name}</TourTitle>\n      <TourInfo>\n        <InfoLabel>City:</InfoLabel>\n        <InfoValue>{tour.city}</InfoValue>\n      </TourInfo>\n      <TourInfo>\n        <InfoLabel>Date:</InfoLabel>\n        <InfoValue>{tour.date}</InfoValue>\n      </TourInfo>\n      <TourInfo>\n        <InfoLabel>Price:</InfoLabel>\n        <InfoValue>&#8372;{tour.price}</InfoValue>\n      </TourInfo>\n      <TourDescription>{tour.description.substring(0, 150)}...</TourDescription>\n      <ViewDetailsButton>View Details</ViewDetailsButton>\n    </TourCardContainer>\n  );\n}\n// onClick={() => onViewDetails(tour._id)}\nexport default ToursItem","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  row-gap: 29px;\n  column-gap: 50px;\n  flex-wrap: wrap;\n  margin-bottom: 100px;\n`;\n","import { useSelector } from 'react-redux';\nimport { selectTours } from 'redux/tours/selectors';\nimport ToursItem from './ToursItem/ToursItem';\nimport { List } from './ToursList.styled';\n\nfunction ToursList() {\n    const tours = useSelector(selectTours);\n  return (\n    <List>\n      {tours.map(tour => {\n        return <ToursItem key={tour._id} tour={tour} />;\n      })}\n    </List>\n  );\n}\n\nexport default ToursList;\n","import styled from 'styled-components';\n\nexport const ToursSection = styled.section`\n  padding: 30px 0 100px;\n`;\n","import Filter from 'components/Filter/Filter';\nimport Loader from 'components/Loader/Loader';\nimport ToursList from 'components/ToursList/ToursList';\nimport { ToursSection } from 'pages/ToursPage/ToursPage.styled';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getCountries } from 'redux/filter/filterThunk';\nimport { selectCountryLoading } from 'redux/filter/selectors';\nimport { selectLoading } from 'redux/tours/selectors';\nimport { getAll } from 'redux/tours/toursThunk';\n\nfunction ToursPage() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n  const countryLoading = useSelector(selectCountryLoading);\n  useEffect(() => {\n    dispatch(getAll());\n    dispatch(getCountries());\n  }, [dispatch]);\n\n  return (\n    <>\n      {!countryLoading && (\n        <ToursSection>\n          <Filter />\n          {/* <Filter\n          cars={allCars}\n          filters={filters}\n          onFilter={(val) => dispatch(setFilteredCars(val))}\n          isFiltered={isFiltered}\n          changeIsFiltered={(val) => dispatch(setIsFiltered(val))}\n          changeFilters={(val) => dispatch(setFilters(val))}\n        /> */}\n          {isLoading ? <Loader /> : <ToursList />}\n          {/* {isFiltered && !filteredCars.length && <NoToursFound />} */}\n        </ToursSection>\n      )}\n    </>\n  );\n}\n\nexport default ToursPage;\n"],"names":["FilterForm","styled","_templateObject","_taggedTemplateLiteral","selectCountries","state","filter","countries","selectCountryLoading","countryLoading","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","selectedCountry","setSelectedCountry","useSelector","_jsx","children","_jsxs","FormControl","sx","minWidth","InputLabel","id","Select","labelId","value","label","onChange","e","target","setFilters","country","map","MenuItem","_id","selectLoading","tours","isLoading","selectTours","TourCardContainer","TourTitle","_templateObject2","TourDescription","_templateObject3","InfoLabel","_templateObject4","TourInfo","_templateObject5","InfoValue","_templateObject6","ViewDetailsButton","_templateObject7","_ref","tour","name","city","date","price","description","substring","List","ToursItem","ToursSection","useEffect","getAll","getCountries","_Fragment","Filter","Loader","ToursList"],"sourceRoot":""}